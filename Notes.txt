[(master_bedroom, type, room),
 (master_bedroom, walls, [((1,1),(2,2)),((2,2),(3,3)),((3,3),(1,1))])])

// USER INPUT / DATA
 prop(master_bedroom, type, bedroom).
 prop(master_bedroom, walls, [((1,1),(2,2)),()()()]).

//////////////////////////
valid(X) :- prop(X,type, Y), valid(X, Y).

valid(X, room) :- prop(X, walls, R), room(R).
valid(X,type, light-unindustrial) :- prop(X,area,A), A<2000.
prop(X, type, room) :- prop(X,type, bedroom)
:-bathroom ...

prop(X,area,A):- prop(X,walls, R), area(R,A).

prop(X,area,A):- p(X, type, building), getrooms(X, LR), areafromlist(LR,A) 


? - valid(master_bedroom, type, room).

? - valid(m_b).
	Y= room 

	valid(m_b, room).




[househelper].

? valid(m_b, type, bedroom).

// Extra thing: not a valid X but could be a valid Y
// Extra thing: Point out problem


% eqn_of_line(X, Y, L) returns true when L is the equation of the line between points X and Y
% eqn_of_line((X1,Y1),(X2,Y2), L) :- slope((X1,Y1),(X2,Y2), S), L is ((Y1-Y2) = S*(X1-X2)).

% slope(X, Y, S) returns true when S is the slope between points X and Y
% slope((X1,Y1), (X2, Y2), S) :- S is ((Y2 - Y1) / (X2 - X1));